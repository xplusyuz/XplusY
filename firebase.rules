rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    function userDoc(uid) { return get(/databases/$(database)/documents/users/$(uid)); }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }

    // Admin by numericId
    function isAdmin() {
      return isSignedIn() && (
        userDoc(request.auth.uid).data.numericId in [1000001,1000002] ||
        userDoc(request.auth.uid).data.numericId in ["1000001","1000002"]
      );
    }

    // ------------ users ------------
    match /users/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow create: if isOwner(uid);
      allow update: if isOwner(uid) || isAdmin();
    }

    // promoCodes: {code, amount, usedBy?, usedAt?}
    match /promoCodes/{code} {
      allow read: if isSignedIn();
      allow update, delete: if false;
      allow create: if isAdmin();
    }

    // topups/{id}
    match /topups/{id} {
      allow read: if isOwner(resource.data.uid) || isAdmin();
      allow create: if isOwner(request.resource.data.uid);
      allow update: if isAdmin();
      allow delete: if false;
    }

    // meta/counters (lastNumericId)
    match /meta/{doc} {
      allow read: if isSignedIn();
      allow update, create: if isAdmin();
    }

    // live/current + subcollections
    match /live/{doc=**} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
  }
}
